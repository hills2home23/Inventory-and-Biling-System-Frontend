{"version":3,"sources":["assets/images/faces/face15.jpg","assets/images/faces/face4.jpg","assets/images/faces/face2.jpg","assets/images/faces/face3.jpg","assets/images/logo-mini.svg","components/ProtectedRoute.js","views/shared/Spinner.js","views/AppRoutes.js","views/shared/Navbar.js","views/shared/Sidebar.js","views/shared/Footer.js","views/App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","rest","render","props","window","localStorage","getItem","to","Spinner","className","Dashboard","lazy","Buttons","Dropdowns","Typography","BasicElements","BasicTable","Mdi","ChartJs","Error404","Error500","Login","Register1","AppRoutes","fallback","path","exact","Navbar","document","querySelector","classList","toggle","src","require","alt","type","onClick","body","placeholder","Dropdown","alignRight","as","Toggle","Menu","Divider","Item","href","evt","preventDefault","event","this","toggleOffcanvas","Sidebar","state","menuState","setState","Object","keys","length","forEach","i","prevProps","location","onRouteChanged","remove","obj","isPathActive","id","tablesMenuOpen","toggleMenuState","data-toggle","Collapse","in","chartsMenuOpen","pathname","startsWith","querySelectorAll","el","addEventListener","contains","add","withRouter","Footer","target","rel","App","navbarComponent","isFullPageLayout","sidebarComponent","footerComponent","console","log","scrollTo","fullPageLayoutRoutes","withTranslation","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fbc42b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face15.736ec0d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face4.d5afaa66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face2.7e0e382d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face3.16c67435.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-mini.c949e51e.svg\";","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const authData = window.localStorage.getItem(\"token\");\n        return(authData ? <Component {...props} /> : <Redirect to=\"/\" />)\n      }}\n    ></Route>\n  );\n}\n\nexport default ProtectedRoute;","import React, { Component } from 'react'\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"spinner-wrapper\">\n          <div className=\"donut\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Spinner\n","import React, { Component,Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ProtectedRoute from \"../components/ProtectedRoute\";\n\nimport Spinner from './shared/Spinner';\n\nconst Dashboard = lazy(() => import('./dashboard/Dashboard'));\n\nconst Buttons = lazy(() => import('./basic-ui/Buttons'));\nconst Dropdowns = lazy(() => import('./basic-ui/Dropdowns'));\nconst Typography = lazy(() => import('./basic-ui/Typography'));\n\nconst BasicElements = lazy(() => import('./form-elements/BasicElements'));\n\nconst BasicTable = lazy(() => import('./tables/BasicTable'));\n\nconst Mdi = lazy(() => import('./icons/Mdi'));\n\nconst ChartJs = lazy(() => import('./charts/ChartJs'));\n\nconst Error404 = lazy(() => import('./error-pages/Error404'));\nconst Error500 = lazy(() => import('./error-pages/Error500'));\n\nconst Login = lazy(() => import('./user-pages/Login'));\nconst Register1 = lazy(() => import('./user-pages/Register'));\n\nclass AppRoutes extends Component {\n  render () {\n    return (\n      <Suspense fallback={<Spinner/>}>   \n        <Switch>\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register1} />\n\n          {/*<Route path=\"/forgetPassword\" component={ForgetPassword} />\n          <Route path=\"/resetPassword\" component={ResetPassword} />*/}\n\n          <Route exact path=\"/\" component={ Dashboard } />\n\n          <ProtectedRoute path=\"/basic-ui/buttons\" component={ Buttons } />\n          <ProtectedRoute path=\"/basic-ui/dropdowns\" component={ Dropdowns } />\n          <ProtectedRoute path=\"/basic-ui/typography\" component={ Typography } />\n\n          <ProtectedRoute path=\"/form-Elements/basic-elements\" component={ BasicElements } />\n\n          <ProtectedRoute path=\"/tables/basic-table\" component={ BasicTable } />\n\n          <ProtectedRoute path=\"/icons/mdi\" component={ Mdi } />\n\n          <ProtectedRoute path=\"/charts/chart-js\" component={ ChartJs } />\n\n          <Route path=\"/error-pages/error-404\" component={ Error404 } />\n          <Route path=\"/error-pages/error-500\" component={ Error500 } />\n\n\n          <Redirect to=\"//error-pages/error-404\" component={ Error404 }/>\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nexport default AppRoutes;","import React, { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Trans } from 'react-i18next';\n\nclass Navbar extends Component {\n  toggleOffcanvas() {\n    document.querySelector('.sidebar-offcanvas').classList.toggle('active');\n  }\n  toggleRightSidebar() {\n    document.querySelector('.right-sidebar').classList.toggle('open');\n  }\n  render () {\n    return (\n      <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/\"><img src={require('../../assets/images/logo-mini.svg')} alt=\"logo\" /></Link>\n        </div>\n        <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\n          <button className=\"navbar-toggler align-self-center\" type=\"button\" onClick={ () => document.body.classList.toggle('sidebar-icon-only') }>\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n          <ul className=\"navbar-nav w-100\">\n            <li className=\"nav-item w-100\">\n              <form className=\"nav-link mt-2 mt-md-0 d-none d-lg-flex search\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search products\" />\n              </form>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <Dropdown alignRight as=\"li\" className=\"nav-item d-none d-lg-block\">\n                <Dropdown.Toggle className=\"nav-link btn btn-success create-new-button no-caret\">\n                + <Trans>Create New Project</Trans>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"navbar-dropdown preview-list create-new-dropdown-menu\">\n                  <h6 className=\"p-3 mb-0\"><Trans>Projects</Trans></h6>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-file-outline text-primary\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>Software Development</Trans></p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-web text-info\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>UI Development</Trans></p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-layers text-danger\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>Software Testing</Trans></p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <p className=\"p-3 mb-0 text-center\"><Trans>See all projects</Trans></p>\n                </Dropdown.Menu>\n              </Dropdown>\n            <li className=\"nav-item d-none d-lg-block\">\n              <a className=\"nav-link\" href=\"!#\" onClick={event => event.preventDefault()}>\n                <i className=\"mdi mdi-view-grid\"></i>\n              </a>\n            </li>\n            <Dropdown alignRight as=\"li\" className=\"nav-item border-left\" >\n              <Dropdown.Toggle as=\"a\" className=\"nav-link count-indicator cursor-pointer\">\n                <i className=\"mdi mdi-email\"></i>\n                <span className=\"count bg-success\"></span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"navbar-dropdown preview-list\">\n                  <h6 className=\"p-3 mb-0\"><Trans>Messages</Trans></h6>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <img src={require('../../assets/images/faces/face4.jpg')} alt=\"profile\" className=\"rounded-circle profile-pic\" />\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>Mark send you a message</Trans></p>\n                      <p className=\"text-muted mb-0\"> 1 <Trans>Minutes ago</Trans> </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <img src={require('../../assets/images/faces/face2.jpg')} alt=\"profile\" className=\"rounded-circle profile-pic\" />\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>Cregh send you a message</Trans></p>\n                      <p className=\"text-muted mb-0\"> 15 <Trans>Minutes ago</Trans> </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <img src={require('../../assets/images/faces/face3.jpg')} alt=\"profile\" className=\"rounded-circle profile-pic\" />\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1\"><Trans>Profile picture updated</Trans></p>\n                      <p className=\"text-muted mb-0\"> 18 <Trans>Minutes ago</Trans> </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <p className=\"p-3 mb-0 text-center\">4 <Trans>new messages</Trans></p>\n                </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown alignRight as=\"li\" className=\"nav-item border-left\">\n              <Dropdown.Toggle as=\"a\" className=\"nav-link count-indicator cursor-pointer\">\n                <i className=\"mdi mdi-bell\"></i>\n                <span className=\"count bg-danger\"></span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dropdown-menu navbar-dropdown preview-list\">\n                <h6 className=\"p-3 mb-0\"><Trans>Notifications</Trans></h6>\n                <Dropdown.Divider />\n                <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-calendar text-success\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\"><Trans>Event today</Trans></p>\n                    <p className=\"text-muted ellipsis mb-0\">\n                    <Trans>Just a reminder that you have an event today</Trans>\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-settings text-danger\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <h6 className=\"preview-subject mb-1\"><Trans>Settings</Trans></h6>\n                    <p className=\"text-muted ellipsis mb-0\">\n                    <Trans>Update dashboard</Trans>\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-link-variant text-warning\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <h6 className=\"preview-subject mb-1\"><Trans>Launch Admin</Trans></h6>\n                    <p className=\"text-muted ellipsis mb-0\">\n                    <Trans>New admin wow</Trans>!\n                    </p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <p className=\"p-3 mb-0 text-center\"><Trans>See all notifications</Trans></p>\n              </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown alignRight as=\"li\" className=\"nav-item\">\n              <Dropdown.Toggle as=\"a\" className=\"nav-link cursor-pointer no-caret\">\n                <div className=\"navbar-profile\">\n                  <img className=\"img-xs rounded-circle\" src={require('../../assets/images/faces/face15.jpg')} alt=\"profile\" />\n                  <p className=\"mb-0 d-none d-sm-block navbar-profile-name\"><Trans>Henry Klein</Trans></p>\n                  <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\n                </div>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\n                <h6 className=\"p-3 mb-0\"><Trans>Profile</Trans></h6>\n                <Dropdown.Divider />\n                <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"preview-item\">\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-settings text-success\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\"><Trans>Settings</Trans></p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item href=\"!#\" onClick={evt =>evt.preventDefault()}  className=\"preview-item\">\n                  <div className=\"preview-thumbnail\">\n                    <div className=\"preview-icon bg-dark rounded-circle\">\n                      <i className=\"mdi mdi-logout text-danger\"></i>\n                    </div>\n                  </div>\n                  <div className=\"preview-item-content\">\n                    <p className=\"preview-subject mb-1\"><Trans>Log Out</Trans></p>\n                  </div>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <p className=\"p-3 mb-0 text-center\"><Trans>Advanced settings</Trans></p>\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n          <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" onClick={this.toggleOffcanvas}>\n            <span className=\"mdi mdi-format-line-spacing\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Collapse, Dropdown } from 'react-bootstrap';\nimport { Trans } from 'react-i18next';\n\nclass Sidebar extends Component {\n\n  state = {};\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({[menuState] : false});\n    } else if(Object.keys(this.state).length === 0) {\n      this.setState({[menuState] : true});\n    } else {\n      Object.keys(this.state).forEach(i => {\n        this.setState({[i]: false});\n      });\n      this.setState({[menuState] : true}); \n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector('#sidebar').classList.remove('active');\n    Object.keys(this.state).forEach(i => {\n      this.setState({[i]: false});\n    });\n\n    const dropdownPaths = [\n      {path:'/apps', state: 'appsMenuOpen'},\n      {path:'/basic-ui', state: 'basicUiMenuOpen'},\n      {path:'/form-elements', state: 'formElementsMenuOpen'},\n      {path:'/tables', state: 'tablesMenuOpen'},\n      {path:'/icons', state: 'iconsMenuOpen'},\n      {path:'/charts', state: 'chartsMenuOpen'},\n      {path:'/user-pages', state: 'userPagesMenuOpen'},\n      {path:'/error-pages', state: 'errorPagesMenuOpen'},\n    ];\n\n    dropdownPaths.forEach((obj => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({[obj.state] : true})\n      }\n    }));\n \n  }\n\n  render () {\n    return (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\n          <a className=\"sidebar-brand brand-logo\" href=\"index.html\">{/*<img src={require('../../assets/images/logo.svg')} alt=\"logo\" />*/}</a>\n          <a className=\"sidebar-brand brand-logo-mini\" href=\"index.html\">{/*<img src={require('../../assets/images/logo-mini.svg')} alt=\"logo\" />*/}</a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item profile\">\n            <div className=\"profile-desc\">\n              <div className=\"profile-pic\">\n                <div className=\"count-indicator\">\n                  <img className=\"img-xs rounded-circle \" src={require('../../assets/images/faces/face15.jpg')} alt=\"profile\" />\n                  <span className=\"count bg-success\"></span>\n                </div>\n                <div className=\"profile-name\">\n                  <h5 className=\"mb-0 font-weight-normal\"><Trans>Henry Klein</Trans></h5>\n                  <span><Trans>Gold Member</Trans></span>\n                </div>\n              </div>\n              <Dropdown alignRight>\n                <Dropdown.Toggle as=\"a\" className=\"cursor-pointer no-caret\">\n                  <i className=\"mdi mdi-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"sidebar-dropdown preview-list\">\n                  <a href=\"!#\" className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-settings text-primary\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1 text-small\"><Trans>Account settings</Trans></p>\n                    </div>\n                  </a>\n                  <div className=\"dropdown-divider\"></div>\n                  <a href=\"!#\" className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-onepassword  text-info\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1 text-small\"><Trans>Change Password</Trans></p>\n                    </div>\n                  </a>\n                  <div className=\"dropdown-divider\"></div>\n                  <a href=\"!#\" className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-dark rounded-circle\">\n                        <i className=\"mdi mdi-calendar-today text-success\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content\">\n                      <p className=\"preview-subject ellipsis mb-1 text-small\"><Trans>To-do list</Trans></p>\n                    </div>\n                  </a>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </li>\n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\"><Trans>Navigation</Trans></span>\n          </li>\n          <li className={ this.isPathActive('/') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Dashboard</Trans></span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/hjch') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Asset with Uniq ID</Trans></span>\n            </Link>\n          </li>\n          \n          <li className={ this.isPathActive('/vhdc') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Orders</Trans></span>\n            </Link>\n          </li>\n          \n        \n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\"><Trans>More</Trans></span>\n          </li>\n          <li className={ this.isPathActive('/vkhsa') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Warehouse</Trans></span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/vhdc') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Log User Access</Trans></span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/vhdc') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-icon\"><i className=\"mdi mdi-speedometer\"></i></span>\n              <span className=\"menu-title\"><Trans>Invoice</Trans></span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/tables') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <div className={ this.state.tablesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('tablesMenuOpen') } data-toggle=\"collapse\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-table-large\"></i>\n              </span>\n              <span className=\"menu-title\"><Trans>Privileges Roles</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.tablesMenuOpen }>\n              <div>\n                <ul className=\"nav flex-column sub-menu\">\n                  <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/basic-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/basic-table\"><Trans>Add new Privilege</Trans></Link></li>\n                  <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/basic-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/basic-table\"><Trans>List Privilege</Trans></Link></li>\n                </ul>\n              </div>\n            </Collapse>\n          </li>\n\n          <li className={ this.isPathActive('/tablvssses') ? 'nav-item menu-items active' : 'nav-item menu-items' }>\n            <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen') } data-toggle=\"collapse\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-table-large\"></i>\n              </span>\n              <span className=\"menu-title\"><Trans>User Management</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.chartsMenuOpen }>\n              <div>\n                <ul className=\"nav flex-column sub-menu\">\n                  <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/basic-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/basic-table\"><Trans>Add new User</Trans></Link></li>\n                  <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/basic-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/basic-table\"><Trans>List Uesrs</Trans></Link></li>\n                </ul>\n              </div>\n            </Collapse>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged();\n    // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector('body');\n    document.querySelectorAll('.sidebar .nav-item').forEach((el) => {\n      \n      el.addEventListener('mouseover', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n\nexport default withRouter(Sidebar);","import React, { Component } from 'react';\n// import { Trans } from 'react-i18next';\nclass Footer extends Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container-fluid\">\n          <div className=\"d-sm-flex justify-content-center justify-content-sm-between py-2 w-100\">\n            <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © <a href=\"https://www.bootstrapdash.com/\" target=\"_blank\" rel=\"noopener noreferrer\">bootstrapdash.com </a>2020</span>\n            <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Free <a href=\"https://www.bootstrapdash.com/react-admin-templates/\" target=\"_blank\" rel=\"noopener noreferrer\"> react admin </a> templates from BootstrapDash.com.  </span>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport Navbar from './shared/Navbar';\nimport Sidebar from './shared/Sidebar';\nimport Footer from './shared/Footer';\nimport { withTranslation } from \"react-i18next\";\n\nclass App extends Component {\n  state = {}\n  componentDidMount() {\n    this.onRouteChanged();\n  }\n  render () {\n    let navbarComponent = !this.state.isFullPageLayout ? <Navbar/> : '';\n    let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n    let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\n    return (\n      <div className=\"container-scroller\">\n        { sidebarComponent }\n        <div className=\"container-fluid page-body-wrapper\">\n          { navbarComponent }\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <AppRoutes/>\n            </div>\n            { footerComponent }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    console.log(\"ROUTE CHANGED\");\n    const body = document.querySelector('body');\n    if(this.props.location.pathname === '/layout/RtlLayout') {\n      body.classList.add('rtl');\n    }\n    else {\n      body.classList.remove('rtl')\n    }\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = ['/login', '/user-pages/login-2', '/register', '/error-404', '/error-500'];\n    for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n        this.setState({\n          isFullPageLayout: true\n        })\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n        break;\n      } else {\n        this.setState({\n          isFullPageLayout: false\n        })\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n      }\n    }\n  }\n\n}\n\nexport default withTranslation()(withRouter(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\nserviceWorker.register();"],"sourceRoot":""}